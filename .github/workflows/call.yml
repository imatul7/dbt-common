name: Use Environment Variables Workflow

on: 
  push:

jobs:
  setup-env-vars-branch:
    uses: ./.github/workflows/action.yml
    with:
        MERGE_TARGET: 'main'

  capture-env-vars:
    runs-on: ubuntu-latest
    needs: [setup-env-vars-branch]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Capture variables by branch
        run: |
          echo "SF_ACCOUNT=${{ needs.setup-env-vars-branch.outputs.SF_ACCOUNT }}"
          echo "SF_REGION=${{ needs.setup-env-vars-branch.outputs.SF_REGION }}"
          echo "SF_DATABASE=${{ needs.setup-env-vars-branch.outputs.SF_DATABASE }}"
          echo "SF_ROLE=${{ needs.setup-env-vars-branch.outputs.SF_ROLE }}"
          echo "SF_WAREHOUSE=${{ needs.setup-env-vars-branch.outputs.SF_WAREHOUSE }}"
          echo "SF_DATABASE_RAW=${{ needs.setup-env-vars-branch.outputs.SF_DATABASE_RAW }}"
          echo "DBT_ARTIFACTS_DATABASE=${{ needs.setup-env-vars-branch.outputs.DBT_ARTIFACTS_DATABASE }}"
          echo "DBT_ARTIFACTS_SCHEMA=${{ needs.setup-env-vars-branch.outputs.DBT_ARTIFACTS_SCHEMA }}"
          
  print-vars:
    needs: [setup-env-vars-branch] 
    runs-on: ubuntu-latest
    steps:
      - name: Print SF Account
        run: echo "SF Account is ${{ needs.setup-env-vars-branch.outputs.SF_ACCOUNT }}"

      - name: Print SF Region
        run: echo "SF Region is ${{ needs.setup-env-vars-branch.outputs.SF_REGION }}"
      # Continue using other outputs as needed


      - name: Print Environment Variables from File
        run: |
          FILE="${{ steps.setEnvVars.outputs.env_file }}"
          if [ -f "$FILE" ]; then
            while IFS= read -r line; do
              echo "$line"
            done < "$FILE"
          else
            echo "$FILE does not exist."
          fi


      
