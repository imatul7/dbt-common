name: Atul Use Environment Variables Workflow

on: 
  workflow_run:
    workflows: [Setup Env Vars by Branch]
  workflow_dispatch:
    inputs:
      TARGET_BRANCH:
        required: true
        description: 'Specify the target branch'
  push:
    branches:
      - main

jobs:
  use-vars:
    uses: ./.github/workflows/action.yml
    with:
      MERGE_TARGET: 'main' # Set this as necessary
    secrets: inherit # In case you need to inherit secrets
    
  capture-env-vars:
    runs-on: ubuntu-latest
    needs: use-vars
    steps:
      - name: capture variables by branch
        run: |
          echo "SF_ACCOUNT=${{ env.SF_ACCOUNT }}" >> $GITHUB_OUTPUT
          printenv
          echo "SF_REGION=${{ env.SF_REGION }}" >> $GITHUB_OUTPUT
          echo "SF_DATABASE=${{ env.SF_DATABASE }}" >> $GITHUB_OUTPUT
          echo "SF_ROLE=${{ env.SF_ROLE }}" >> $GITHUB_OUTPUT
          echo "SF_WAREHOUSE=${{ env.SF_WAREHOUSE }}" >> $GITHUB_OUTPUT
          echo "SF_DATABASE_RAW=${{ env.SF_DATABASE_RAW }}" >> $GITHUB_OUTPUT
          echo "DBT_ARTIFACTS_DATABASE=${{ env.DBT_ARTIFACTS_DATABASE }}" >> $GITHUB_OUTPUT
          echo "DBT_ARTIFACTS_SCHEMA=${{ env.DBT_ARTIFACTS_SCHEMA }}" >> $GITHUB_OUTPUT
          echo "VAULT_TOKEN=${{ env.VAULT_TOKEN }}" >> $GITHUB_OUTPUT
          
  print-vars:
    needs: use-vars # Ensure this job runs after the use-vars job
    runs-on: ubuntu-latest
    steps:
      - name: Print SF Account
        run: echo "SF Account is ${{ needs.use-vars.outputs.SF_ACCOUNT }}"

      - name: Print SF Region
        run: echo "SF Region is ${{ needs.use-vars.outputs.SF_REGION }}"
      # Continue using other outputs as needed


  download-env-file:
    needs: use-vars
    runs-on: ubuntu-latest
    steps:
      - name: Download env file
        uses: actions/download-artifact@v3
        with:
          name: env-variables-file
      - name: List files in the current directory
        run: ls -lah

      - name: Show env file content
        run: cat env_variables.txt || echo "File not found."
        
      - name: Print Environment Variables from File
        run: |
          echo "SF_ACCOUNT = $(grep 'SF_ACCOUNT' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "SF_REGION = $(grep 'SF_REGION' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "SF_DATABASE = $(grep 'SF_DATABASE' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "SF_ROLE = $(grep 'SF_ROLE' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "SF_WAREHOUSE = $(grep 'SF_WAREHOUSE' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "SF_DATABASE_RAW = $(grep 'SF_DATABASE_RAW' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "DBT_ARTIFACTS_DATABASE = $(grep 'DBT_ARTIFACTS_DATABASE' env_variables.txt | cut -d'=' -f2 | xargs)"
          echo "DBT_ARTIFACTS_SCHEMA = $(grep 'DBT_ARTIFACTS_SCHEMA' env_variables.txt | cut -d'=' -f2 | xargs)"

      - name: Print all outputs from JSON
        run: |
          OUTPUTS_JSON='${{ needs.use-vars.outputs.all_outputs }}'
           echo "$OUTPUTS_JSON" | jq

      - name: permission
        run: chmod +x ./Test_folder/Test.sh
        
      - name: Set up variables by branch using Test script
        id: setOutputsTest
        env: 
            MERGE_TARGET: 'main' 
        run: ./Test_folder/Test.sh >> $GITHUB_OUTPUT
              cat $GITHUB_OUTPUT 
                
      


