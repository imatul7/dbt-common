name: Setup Env Vars by Branch

on:
  workflow_call:
    inputs:
      MERGE_TARGET:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      MERGE_TARGET:
        required: true
        type: string
        description: 'Target branch for merge'

jobs:
  setup-env-vars:
    runs-on: ubuntu-latest
    outputs:
      SF_ACCOUNT: ${{ steps.setEnvVars.outputs.SF_ACCOUNT }}
      SF_REGION: ${{ steps.setEnvVars.outputs.SF_REGION }}
      SF_DATABASE: ${{ steps.setEnvVars.outputs.SF_DATABASE }}
      SF_ROLE: ${{ steps.setEnvVars.outputs.SF_ROLE }}
      SF_WAREHOUSE: ${{ steps.setEnvVars.outputs.SF_WAREHOUSE }}
      SF_DATABASE_RAW: ${{ steps.setEnvVars.outputs.SF_DATABASE_RAW }}
      DBT_ARTIFACTS_DATABASE: ${{ steps.setEnvVars.outputs.DBT_ARTIFACTS_DATABASE }}
      DBT_ARTIFACTS_SCHEMA: ${{ steps.setEnvVars.outputs.DBT_ARTIFACTS_SCHEMA }}
    steps:
      - name: Set up variables by branch
        id: setEnvVars
        run: |
          echo "SF_ACCOUNT=hardcoded-account" >> $GITHUB_OUTPUT
          echo "SF_REGION=hardcoded-region" >> $GITHUB_OUTPUT
          echo "SF_DATABASE=hardcoded-database" >> $GITHUB_OUTPUT
          echo "SF_ROLE=hardcoded-role" >> $GITHUB_OUTPUT
          echo "SF_WAREHOUSE=hardcoded-warehouse" >> $GITHUB_OUTPUT
          echo "SF_DATABASE_RAW=hardcoded-database-raw" >> $GITHUB_OUTPUT
          echo "DBT_ARTIFACTS_DATABASE=hardcoded-dbt-artifacts-db" >> $GITHUB_OUTPUT
          echo "DBT_ARTIFACTS_SCHEMA=hardcoded-dbt-artifacts-schema" >> $GITHUB_OUTPUT

      - name: Set up variables by branch
        id: setEnvVarsFile
        run: |
          ENV_FILE=env_variables.txt
          echo "SF_ACCOUNT=hardcoded-account" >> $ENV_FILE
          echo "SF_REGION=hardcoded-region" >> $ENV_FILE
          echo "SF_DATABASE=hardcoded-database" >> $ENV_FILE
          echo "SF_ROLE=hardcoded-role" >> $ENV_FILE
          echo "SF_WAREHOUSE=hardcoded-warehouse" >> $ENV_FILE
          echo "SF_DATABASE_RAW=hardcoded-database-raw" >> $ENV_FILE
          echo "DBT_ARTIFACTS_DATABASE=hardcoded-dbt-artifacts-db" >> $ENV_FILE
          echo "DBT_ARTIFACTS_SCHEMA=hardcoded-dbt-artifacts-schema" >> $ENV_FILE
          echo "::set-output name=env_file::$ENV_FILE" # Output the file name for other jobs to use
      - name: Upload env file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: env-variables-file
          path: ${{ steps.setEnvVarsFile.outputs.env_file }}


